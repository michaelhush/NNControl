14 - 18 Aug:
NN_Control_algorithm.py:
1) Model class: allow users to define multiple dynamics. But need to follow function names. See code comments.
2) Separate main scripts from class
3) saving values pickling, saving trained NN models (Adam solver??)
4) forget data history
5) starting iterations at last values
- all trainable variable values unchanged between iterations
- only need to record last cell states and hidden states 
- Last state values are obtained by feeding the last batch data
- Not sure about the last state values for plotting (useful if you want to see how much better controller does each iteration)
6) Add in features for multi-layer LSTM.

7) optical spring system implemented, bugs fixed so plug in model_name = 'Cavity_spring' and play straightaway.
- Check the system of equations, hopefully I did the algebra correctly
- Don't know what intuitive values for all parameters are.
- Fix it to only pass one control, right now assuming access to everything
